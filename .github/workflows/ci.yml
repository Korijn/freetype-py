# based on https://github.com/joerick/cibuildwheel/blob/master/examples/github-minimal.yml

name: Build

on:
  push:
    branches: '*'
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.name }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          cibw_build: "cp36-*"
        - os: windows-latest
          cibw_build: "cp36-*"
        - os: macos-latest
          cibw_build: "cp36-*"
        - os: macos-latest
          cibw_build: "cp38-macosx_arm64"
          name: '(arm64)'
        - os: macos-latest
          cibw_build: "cp38-macosx_universal2"
          name: '(universal2)'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # unshallow fetch for setuptools-scm

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.2.2
      env:
        CIBW_BUILD: ${{ matrix.cibw_build }}
        CIBW_ARCHS: "auto64"
        CIBW_ARCHS_MACOS: "auto64 universal2 arm64"
        CIBW_ENVIRONMENT: "FREETYPEPY_BUNDLE_FT=yes PYTHON_ARCH=64"
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
        CIBW_TEST_COMMAND: "pytest {project}/tests"
        CIBW_TEST_REQUIRES: "pytest"
      with:
        output-dir: dist

    - name: Upload distributions
      uses: actions/upload-artifact@v2
      with:
        path: dist
        name: dist

  publish:
    name: Publish release to Pypi
    runs-on: ubuntu-latest
    needs: [build]
    if: success() && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Download assets
      uses: actions/download-artifact@v1.0.0
      with:
        name: dist
    - name: Build sdist
      run: |
        python setup.py sdist
    - name: Publish package to PyPI
      run: |
        pip install twine
        twine upload dist/*
      env:
        TWINE_USERNAME: ${{ secrets.pypi_username }}
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
